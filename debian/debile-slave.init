#!/bin/sh

### BEGIN INIT INFO
# Provides:           debile-slaave
# Required-Start:     $syslog $remote_fs
# Required-Stop:      $syslog $remote_fs
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  Do Debian build jobs like a boss.
# Description:
#  I'm lazy.
#  Fix me.
### END INIT INFO

BASE=$(basename $0)

DEBILE=/usr/bin/$BASE
DEBILE_PIDFILE=/var/run/$BASE.pid
DEBILE_OPTS=
DEBILE_USER="Debian-debile-unpriv"

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin

# Get lsb functions
. /lib/lsb/init-functions

if [ -f /etc/default/$BASE ]; then
	. /etc/default/$BASE
fi

# see also init_is_upstart in /lib/lsb/init-functions
# if [ -x /sbin/initctl ] && /sbin/initctl version 2>/dev/null | /bin/grep -q upstart; then
# 	log_failure_msg "Debile is managed via upstart, try using service $BASE $1"
# 	exit 1
# fi

if [ ! -x $DEBILE ]; then
	log_failure_msg "$DEBILE not present or not executable"
	exit 1
fi

fail_unless_root() {
	if [ "$(id -u)" != '0' ]; then
		log_failure_msg "debile-slave must be run as root"
		exit 1
	fi
}

case "$1" in
	start)
		fail_unless_root
		log_begin_msg "Starting Debile Slave: $BASE"
		start-stop-daemon --start --background \
			--exec "$DEBILE" \
			--pidfile "$DEBILE_PIDFILE" \
            --chuid $DEBILE_USER \
			-- $DEBILE_OPTS
		log_end_msg $?
		;;

	stop)
		fail_unless_root
		log_begin_msg "Stopping Debile Slave: $BASE"
		start-stop-daemon --stop \
			--pidfile "$DEBILE_PIDFILE"
		log_end_msg $?
		;;

	restart)
		fail_unless_root
		debile_pid=`cat "$DEBILE_PIDFILE" 2>/dev/null`
		[ -n "$debile_pid" ] \
			&& ps -p $debile_pid > /dev/null 2>&1 \
			&& $0 stop
		$0 start
		;;

	force-reload)
		fail_unless_root
		$0 restart
		;;

	status)
		status_of_proc -p "$DEBILE_PIDFILE" "$DEBILE" debile
		;;

	*)
		echo "Usage: $0 {start|stop|restart|status}"
		exit 1
		;;
esac

exit 0
