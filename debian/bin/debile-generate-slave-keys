#!/bin/bash
# bashisms and proud of it.
#
# Copyright (c) Paul R. Tagliamonte <paultag@debian.org>, 2014 under the
# terms and conditions of the Debile project, MIT/Expat. You should have
# recieved a copy of the license with this script.

SLAVE_NAME=$1

if [ "x${SLAVE_NAME}" = "x" ]; then
    echo "Error: I need a single argument (slave's name)"
    exit 1
fi

GPG_USER="debile@${SLAVE_NAME}"
GPG_NAME="Debile Autobuilder"

GPG_COMMAND=gpg
GPG_FLAGS=""
GPG_FLAGS="${GPG_FLAGS} --no-default-keyring"
GPG_FLAGS="${GPG_FLAGS} --keyring=$(pwd)/keyring"
GPG_FLAGS="${GPG_FLAGS} --secret-keyring=$(pwd)/secret-keyring"


function get-fingerprint {
    GPG_FINGERPRINT=$(${GPG_COMMAND} ${GPG_FLAGS} --fingerprint ${GPG_USER} 2>/dev/null \
        | grep "Key fingerprint = " \
        | sed 's/Key fingerprint =//g' \
        | tr -d " " \
        | head -n 1)
    echo ${GPG_FINGERPRINT}
}

function generate-password {
    cat /usr/share/dict/words | grep -v "'" | shuf | head -n 6 \
        | tr '\n' '-' | sed 's/-$//g' && echo
}


if [ "x`get-fingerprint`" = "x" ]; then
    echo "OK. I'm generating a OpenPGP key for the slave."
    echo ""
    echo "  This may take a minute, please let me run."
    echo ""
    ${GPG_COMMAND} ${GPG_FLAGS} \
        -q --gen-key --batch 2>/dev/null <<EOF
            Key-Type: RSA
            Key-Length: 2048
            Name-Real: ${GPG_NAME}
            Name-Comment: Debile Slave Key
            Name-Email: ${GPG_USER}
            %commit
            %echo Done
EOF
fi

GPG_FINGERPRINT=`get-fingerprint`
# Right, OK. We've got a fingerprint.
SLAVE_PASSWORD=$(generate-password)

echo ""
echo "   The slave has a username of ${SLAVE_NAME}"
echo "   The slave has a password of ${SLAVE_PASSWORD}"
echo "   The slave has a OpenPGP key ${GPG_FINGERPRINT}"
echo ""

WORKDIR=$(mktemp -d)
pushd ${WORKDIR} >/dev/null
mkdir ${SLAVE_NAME}
cd ${SLAVE_NAME}

echo "${SLAVE_NAME}" > name
echo "${SLAVE_PASSWORD}" > password
echo "${GPG_FINGERPRINT}" > fingerprint

${GPG_COMMAND} ${GPG_FLAGS} --armor --export ${GPG_FINGERPRINT} > key.pub
${GPG_COMMAND} ${GPG_FLAGS} --armor --export-secret-key ${GPG_FINGERPRINT} > key.priv

echo -n " ok. creating slave remotely."

debile-remote create-slave ${SLAVE_NAME} ${SLAVE_PASSWORD} key.pub

RET=$?
if [ ${RET} -ne 0 ]; then
    echo "   BAD!!!  debile-remote failed. aborting."
    popd >/dev/null
    rm -rf ${WORKDIR}
    exit 1
fi
echo " ... created."

cd ..
tar -zcf ${SLAVE_NAME}.tar.gz ${SLAVE_NAME}

popd >/dev/null
mv ${WORKDIR}/${SLAVE_NAME}.tar.gz .
rm -rf ${WORKDIR}
